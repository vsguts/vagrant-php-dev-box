---
#- name: Add Percona apt signing key
#  become: yes
#  apt_key: keyserver=keys.gnupg.net id=1C4CBDCDCD2EFD2A state=present
#
#- name: Add Percona repository
#  become: yes
#  apt_repository: repo='deb http://repo.percona.com/apt xenial main' state=present
#  register: result
#
#- name: Add Percona source repository
#  become: yes
#  apt_repository: repo='deb-src http://repo.percona.com/apt xenial main' state=present

- name: Download deb package
  become: yes
  shell: wget https://repo.percona.com/apt/percona-release_0.1-4.$(lsb_release -sc)_all.deb
  args:
    chdir: ~

- name: Install deb package
  become: yes
  shell: dpkg -i percona-release_0.1-4.$(lsb_release -sc)_all.deb
  args:
    chdir: ~

- name: Update apt cache
  become: yes
  apt: update_cache=yes

- name: Install python packages
  become: yes
  apt: pkg={{ item }} state=present
  with_items:
    - python-pycurl
    - python-mysqldb
  when: ansible_os_family == "Debian"

- name: Install Percona packages
  become: yes
  apt: pkg={{ item }} state=present
  with_items:
    - percona-server-common-5.6
    - percona-server-client-5.6
    - percona-server-server-5.6
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Create Mysql configuration file
  become: yes
  template: src=server.my.cnf.j2 dest=/etc/mysql/my.cnf
  notify:
    - restart mysql

- name: Update mysql root password for all root accounts
  become: yes
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  notify:
  - restart mysql

- name: MySQL custom user
  mysql_user:
    host: "{{ item }}"
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: "mysql_user is defined"
  notify:
    - restart mysql

- name: Copy .my.cnf file with user password credentials
  template: src=user.my.cnf.j2 dest=/home/{{ansible_user}}/.my.cnf mode=0600 owner={{ansible_user}} group={{ansible_user}}
  when: (mysql_user is defined) and (ansible_user != "root")

- name: Copy .my.cnf file with root password credentials
  become: yes
  template: src=root.my.cnf.j2 dest=~/.my.cnf mode=0600
